<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends AbstractRepository {

    public function getUserUsernamePasswoord($data) {

        $results = $this
                ->createQueryBuilder('user')
                //->select('piecedet.id piecedet.prix, piecedet.image')
                ->join('user.roles', 'role')
                ->addSelect('role')
                ->where("user.username = :username AND user.password = :password ")
                ->setParameters([
                    'username' => $data->getUsername(),
                    'password' => $data->getPassword()
                ])
                ->getQuery()
                ->getResult();

        return $results;
    }

    public function findAllQueryBuilder(array $dataSearch, $order = 'asc', $limit = 20, $offset = 0) {
        
         dump($dataSearch);
        
        $qb = $this->createQueryBuilder('u')
                ->select('u');
        if($dataSearch['username']) {
            $qb->where('u.username = :username')
               ->setParameter('username', $dataSearch['username']);
        }
        if($dataSearch['email']) {
            $qb->Andwhere('u.email = :email')
               ->setParameter('email', $dataSearch['email']);
        }
       
        if($dataSearch['city']) {
            $qb->Andwhere('u.city = :city')
               ->setParameter('city', $dataSearch['city']);
        }
        
        $qb->orderBy('u.id', $order);
        // 
        return $this->paginate($qb, $limit, $offset);
    }

    public function getUserByUsername() {

        //echo 'test';

        $results = $this
                ->createQueryBuilder('user')
                //->where("user.username LIKE '%". $motArechercher ."'")
                ->getQuery()
                ->getResult();

        return $results;
    }

}
